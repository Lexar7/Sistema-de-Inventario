<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>